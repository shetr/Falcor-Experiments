# Create materials

light = StandardMaterial('Light')
light.emissiveColor = float3(17, 12, 4)
light.emissiveFactor = 10

light_frame = StandardMaterial('Light Frame')
light_frame.baseColor = float4(0.05, 0.05, 0.05, 1.0)
light_frame.roughness = 0.5

floor = StandardMaterial('Floor')
floor.baseColor = float4(0.725, 0.71, 0.68, 1.0)
floor.roughness = 0.5

backWall = StandardMaterial('Back Wall')
backWall.baseColor = float4(0.725, 0.71, 0.68, 1.0)
backWall.roughness = 0.5

ceiling = StandardMaterial('Ceiling')
ceiling.baseColor = float4(0.725, 0.71, 0.68, 1.0)
ceiling.roughness = 0.5

leftWall = StandardMaterial('Left Wall')
leftWall.baseColor = float4(0.63, 0.065, 0.05, 1.0)
leftWall.roughness = 0.5

rightWall = StandardMaterial('Right Wall')
rightWall.baseColor = float4(0.14, 0.45, 0.091, 1.0)
rightWall.roughness = 0.5

barrier = StandardMaterial('Barrier')
barrier.baseColor = float4(0.725, 0.71, 0.68, 1.0)
barrier.roughness = 0.5

# Create geometry

quadMesh = TriangleMesh.createQuad()
cubeMesh = TriangleMesh.createCube()

# Create mesh instances

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Floor', Transform(scaling=float3(0.55, 1.0, 0.56))),
    sceneBuilder.addTriangleMesh(quadMesh, floor)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Ceiling', Transform(scaling=float3(0.55, 1.0, 0.56), translation=float3(0, 0.55, 0), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, ceiling)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierUp1', Transform(scaling=float3(0.275, 1.0, 0.56), translation=float3(-0.15, 0.451, 0), rotationEulerDeg=float3(0, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierUp2', Transform(scaling=float3(0.275, 1.0, 0.56), translation=float3(0.15, 0.451, 0), rotationEulerDeg=float3(0, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierUp3', Transform(scaling=float3(0.56, 1.0, 0.275), translation=float3(0, 0.451, -0.15), rotationEulerDeg=float3(0, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierUp4', Transform(scaling=float3(0.56, 1.0, 0.275), translation=float3(0, 0.451, 0.145), rotationEulerDeg=float3(0, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierDown1', Transform(scaling=float3(0.275, 1.0, 0.56), translation=float3(-0.15, 0.45, 0), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierDown2', Transform(scaling=float3(0.275, 1.0, 0.56), translation=float3(0.15, 0.45, 0), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierDown3', Transform(scaling=float3(0.56, 1.0, 0.275), translation=float3(0, 0.45, -0.15), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)
sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('BarrierDown4', Transform(scaling=float3(0.56, 1.0, 0.275), translation=float3(0, 0.45, 0.145), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, barrier)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Back Wall', Transform(scaling=float3(0.55, 1.0, 0.56), translation=float3(0, 0.275, -0.275), rotationEulerDeg=float3(90, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, backWall)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Left Wall', Transform(scaling=float3(0.55, 1.0, 0.56), translation=float3(-0.275, 0.275, 0), rotationEulerDeg=float3(0, 0, -90))),
    sceneBuilder.addTriangleMesh(quadMesh, leftWall)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Right Wall', Transform(scaling=float3(0.55, 1.0, 0.56), translation=float3(0.275, 0.275, 0), rotationEulerDeg=float3(0, 0, 90))),
    sceneBuilder.addTriangleMesh(quadMesh, rightWall)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Light', Transform(scaling=0.4, translation=float3(0, 0.548, 0), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, light)
)

sceneBuilder.addMeshInstance(
    sceneBuilder.addNode('Light Frame', Transform(scaling=0.425, translation=float3(0, 0.549, 0), rotationEulerDeg=float3(180, 0, 0))),
    sceneBuilder.addTriangleMesh(quadMesh, light_frame)
)

# Create camera

camera = Camera()
camera.position = float3(0, 0.28, 1.2)
camera.target = float3(0, 0.28, 0)
camera.up = float3(0, 1, 0)
camera.focalLength = 35.0
sceneBuilder.addCamera(camera)
